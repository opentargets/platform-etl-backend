spark-uri = "local[*]"
testdata = "/home/jarrod/development/testData/"
data = "/home/jarrod/development/platform-etl-backend/data"
data_target = ${data}"/target-inputs/"
data_drug = ${data}"/drug-inputs/"
data_cb = ${data}"/cancerBiomarkerInput"
data_cb_test = "/home/jarrod/development/platform-etl-backend/src/test/resources/cancerBiomarkers"
data_mp = ${data}"/mousePhenotypesInput/"
output_local = ${data}"/output1"
etl_preview = ${data}"/output/preview"

etl-dag.resolve = false
//common.additional-outputs = []

spark-settings {
  write-mode = "overwrite"
}

common {
  output-format = "parquet"
  output-base_path = ${output_local}
  input = ${data}
  additional-outputs = [ "json" ]
}

epmc.input.cooccurences.path = ${data}"/cooccurrences"
disease.hpo-phenotype.path = ${data}"/22_06/ontology-inputs/hpo-phenotypes.jsonl"
disease.efo-ontology.path = ${data}"/22_06/ontology-inputs/efo_jarrod.jsonl"
disease.hpo-ontology.path = ${data}"/22_06/ontology-inputs/ontology-hpo.jsonl"
disease.mondo-ontology.path = ${data}"/22_06/ontology-inputs/ontology-mondo.jsonl"

otarproject.otar-meta.path = "/home/jarrod/development/platform-etl-backend/data/otar/otar_meta.tsv"
otarproject.otar-project-to-efo.path = "/home/jarrod/development/platform-etl-backend/data/otar/otar_project_to_efo.tsv"
otarproject.disease-etl = {
  path ="/home/jarrod/development/platform-etl-backend/data/otar/diseases"
  format = "parquet"
}

//neodb {
//  inputs {
//    evidence = {
//      path = ${output}"/evidence_bk"
//      format = ${common.output-format}
//    }
//    target = {
//      path = "/home/jarrod/development/platform-etl-backend/data/21_11/targets"
//      format = ${common.output-format}
//    }
//    disease = {
//      format = ${common.output-format}
//      path = "/home/jarrod/development/platform-etl-backend/data/21_11/diseases"
//    }
//  }
//}
//
//target-validation {
//  inputs = [
//    {
//      name = "mousePhenotypes"
//      id-column = "targetFromSourceId"
//      data {
//        format = "json"
//        path = ${data_mp}
//      }
//    }]
//  target = {
//    format = "parquet"
//    path = ${common.output}"/target-ssl",
//    generate-metadata = false
//  }
//}
//
//aop {
//  input {
//    format = "xml"
//    path = ${data}"/aop/aop-wiki.xml"
//  }
//  output {
//    aop {
//      format = ${common.output-format}
//      path = ${common.output}"/AOP_aop"
//    }
//    key-events {
//      format = ${common.output-format}
//      path = ${common.output}"/AOP_keyEvents"
//    }
//  }
//}
//
//interactions {
//  target-etl {
//    format = ${common.output-format}
//    path = ${target.outputs.target.path}
//  }
//  rnacentral {
//    path = ${data}"/interaction-inputs/rna_central_ensembl.tsv"
//  }
//  humanmapping {
//    path = ${data}"/interaction-inputs/HUMAN_9606_idmapping.dat.gz"
//  }
//  ensproteins {
//    path = ${data}"/interaction-inputs/Homo_sapiens.GRCh38.chr.gtf.gz"
//  }
//  intact {
//    path = ${data}"/interaction-inputs/intact-interactors-2021-06-07.json"
//  }
//  strings {
//    path = ${data}"/interaction-inputs/9606.protein.links.full_w_homology.v11.0.txt.gz"
//  }
//
//}
//
//gene-ontology {
//  go-input = {
//    path = ${data}"/go/go.obo"
//  }
//}
//
target {
  input {
    gen-code.path = "/home/jarrod/development/platform-etl-backend/data/target-inputs/gencode/gencode.v40.annotation.gff3.gz"
    chemical-probes = {
      format = "json"
      path = ${data_target}"/probeminer/chemicalprobes-2021-08-18.json"
    }
    safety-toxicity {
      path = ${data_target}"safety/data_files/toxcast/ToxCast_2021-08-17.tsv"
    }
    safety-adverse-event {
      format = "json"
      path = ${data_target}"safety/data_files/adverse_events/ae-2021-11-03.json"
    }
    safety-safety-risk {
      format = "json"
      path = ${data_target}"safety/data_files/safety_risk/sr-2021-11-03.json"
    }
    chembl {
      format = "json"
      path = ${data_target}"chembl/chembl_29_target-2021-09-03.jsonl"
    }
    ensembl {
      format = "json"
      path = ${data_target}"ensembl/homo_sapiens.jsonl"
    }
    genetic-constraints = {
      format = "csv"
      path = ${data_target}"gnomad/gnomad_lof.tsv"
      options = [
        {k: "sep", v: "\\t"}
        {k: "header", v: true}
      ]
    }
    gene-ontology {
      format = "csv"
      path = ${data_target}"go/goa_human.gaf"
      options = [
        {k: "sep", v: "\\t"},
        {k: "comment", v: "!"} // remove all metadata lines beginning with !
      ]
    }
    gene-ontology-rna {
      format = "csv"
      path = ${data_target}"go/goa_human_rna.gaf.gz"
      options = [
        {k: "sep", v: "\\t"},
        {k: "comment", v: "!"} // remove all metadata lines beginning with !
      ]
    }
    gene-ontology-rna-lookup {
      format = "csv"
      path = ${data_target}"go/ensembl.tsv"
      options = [
        {k: "sep", v: "\\t"}
      ]
    }
    gene-ontology-eco {
      format = "csv"
      path = ${data_target}"go/goa_human.gpa.gz"
      options = [
        {k: "sep", v: "\\t"}
        {k: "comment", v: "!"}
      ]
    }
    hallmarks {
      format = "csv"
      path = ${data_target}"hallmarks/cosmic-hallmarks-*.tsv.gz"
      options = [
        {k: "sep", v: "\\t"}
        {k: "header", v: true}
      ]
    }
    hgnc {
      format = "json"
      path = ${data_target}"hgnc_20.11.json"
    }
    homology-dictionary {
      format = "csv"
      path = ${data_target}"homologues/species_EnsemblVertebrates.txt"
      options = [
        {k: "sep", v: "\\t"}
        {k: "header", v: true}
      ]
    }
    homology-coding-proteins {
      format = "csv"
      path = ${data_target}"homologues/c*.tsv.gz"
      options = [
        {k: "sep", v: "\\t"}
        {k: "header", v: true}
      ]
    }
    homology-gene-dictionary {
      format = "csv"
      path = ${data_target}"homologues/homology_104_id_name.tsv"
      options = [
        {k: "sep", v: "\\t"}
      ]
    }
    hpa {
      format = "csv"
      path = ${data_target}"hpa/subcellular_location.tsv"
      options = [
        {k: "sep", v: "\\t"}
        {k: "header", v: true}
      ]
    }
    hpa-sl-ontology {
      path = ${data}"/location/HPA_subcellular_locations_SL-2021-08-19.tsv"
    }
    ncbi {
      format = "csv"
      path = ${data_target}"ncbi/Homo*"
      options = [
        {k: "sep", v: "\\t"}
        {k: "header", v: true}
      ]
    }
    ortholog {
      format = "csv"
      path = ${data_target}"human_all_hcop_sixteen_column-2021-06-18.txt.gz"
    }
    ps-gene-identifier {
      format = "csv"
      path = ${data_target}"projectScores/gene_identifiers_latest.csv.gz"
      options = [
        {k: "header", v: true}
      ]
    }
    ps-essentiality-matrix {
      format = "csv"
      path = ${data_target}"projectScores/04_binaryDepScores.tsv"
      options = [
        {k: "sep", v: "\\t"}
        {k: "header", v: true}
      ]
    }
    tep {
      format = "json"
      path = ${data_target}"tep/tep-2021-09-10.json.gz"
    }
    tractability = {
      format = "csv"
      path = ${data_target}"tractability/tractability_buckets_new_version.tsv"
      options = [
        {k: "sep", v: "\\t"}
        {k: "header", v: true}
      ]
    }
    uniprot {
      format = "txt"
      path = ${data_target}"/uniprot/uniprot.txt.gz"
    }
    uniprot-ssl {
      path = ${data_target}"/uniprot/uniprot-ssl.tsv.gz"
    }
    reactome-etl {
      format = "parquet"
      path = ${data_target}"reactome/*.parquet"
    }
    reactome-pathways {
      path = ${data_target}"reactome/*.txt"
    }
    gen-code {
      path = ${data_target}"gencode/*gff3.gz"
    }
  }
  outputs {
    target {
      format = "parquet"
      path = ${common.output}"/target"
    }
  }

}
drug {
  chembl-molecule {
    format = "json"
    path = ${data_drug}"chembl/chembl_29_mol*.jsonl"
  }
  chembl-indication {
    format = "json"
    path = ${data_drug}"chembl/chembl_29_drug_indication*.jsonl"
  }
  chembl-mechanism {
    format = "json"
    path = ${data_drug}"chembl/chembl_29_mechanism-2021*.jsonl"
  }
  chembl-target {
    format = "json"
    path = ${data_drug}"chembl/chembl_29_target*.jsonl"
  }
  chembl-warning {
    format = "json"
    path = ${data_drug}"chembl/chembl_29_drug_warning*.jsonl"
  }
  disease-etl {
    format = "parquet"
    path = ${data_drug}"efo"
  }
  target-etl {
    format = "parquet"
    path = ${common.output}"/target/"
  }
  drugbank-to-chembl {
    format = "csv"
    path = ${data_drug}"chembl/db.csv.gz"
    options = [
      {k: "sep", v: "\\t"},
      {k: "header", v: "true"}
    ]
  }
  drug-extensions = []
  outputs = {
    drug {
      format = ${common.output-format}
      path = ${common.output}"/drugs/drug"
    }
    mechanism-of-action {
      format = ${common.output-format}
      path = ${common.output}"/drugs/mechanism_of_action"
    }
    indications {
      format = ${common.output-format}
      path = ${common.output}"/drugs/indication"
    }
    warnings {
      format = ${common.output-format}
      path = ${common.output}"/drugs/drug_warnings"
    }
  }
}

//
//known-drugs {
//  inputs = {
//    evidences = {
//      path = "/home/jarrod/development/platform-etl-backend/data/etl_output/2106/"
//      format = "parquet"
//    }
//    diseases = {
//      path = "/home/jarrod/development/platform-etl-backend/data/etl_output/disease"
//      format = "parquet"
//    }
//    targets {
//      path = ${common.output}"/v14/target-beta"
//      format = "parquet"
//    }
//    drugs = {
//      drug {
//        format = "json"
//        path = ${common.output}"/drugs/drug"
//      }
//      mechanism-of-action {
//        format = "json"
//        path = ${common.output}"/drugs/mechanism_of_action"
//      }
//    }
//  }
//  output {
//    format = ${common.output-format}
//    path = ${common.output}"/knownDrugsAggregated"
//  }
//}
//
//evidences {
//  outputs.succeeded.format = "json"
//  inputs {
//    raw-evidences {
//      format = "json"
//      path = "/home/jarrod/development/platform-etl-backend/data/evidences/cancer_biomarkers*.json.gz"
//    }
//    diseases {
//      format = ${common.output-format}
//      path = ${etl_preview}"/diseases"
//    }
//    targets {
//      format = ${common.output-format}
//      path = ${output}"/target-safety-1745"
//    }
//  }
//}
//
//search {
//  inputs = {
//    evidences = {
//      format = "parquet"
//      path = ${output}"/preview/evidence/"
//    }
//    diseases = {
//      format = "parquet"
//      path = ${output}"/preview/diseases/"
//    }
//    disease-hpo = {
//      format = "parquet"
//      path = ${output}"/preview/diseaseToPhenotype/"
//    }
//    hpo = {
//      format = "parquet"
//      path = ${output}"/preview/hpo/"
//    }
//    targets = {
//      format = "parquet"
//      path = ${output}"/target-beta"
//    }
//    drugs = {
//      drug {
//        format = "parquet"
//        path = ${output}"/preview/molecule"
//      }
//      mechanism-of-action {
//        format = "parquet"
//        path = ${output}"/preview/mechanismOfAction"
//      }
//      indications {
//        format = "parquet"
//        path = ${output}"/preview/indication"
//      }
//      drug-warnings {
//        format = "parquet"
//        path = ${output}"/preview/drugWarnings"
//      }
//
//    }
//    associations = {
//      format = "parquet"
//      path = ${output}"/preview/associationByOverallIndirect/"
//    }
//  }
//  outputs {
//    targets {
//      format = ${common.output-format}
//      path = ${common.output}"/searchTarget"
//    }
//    diseases {
//      format = ${common.output-format}
//      path = ${common.output}"/searchDisease"
//    }
//    drugs {
//      format = ${common.output-format}
//      path = ${common.output}"/searchDrug"
//    }
//  }
//}
//
reactome {
  inputs {
    pathways {
      path =  ${data}"/21_11/reactome-inputs/ReactomePathways-2021-11-10.txt"
    }
    relations {
      path =  ${data}"/21_11/reactome-inputs/ReactomePathwaysRelation-2021-11-10.txt"
    }
  }
}
//
//aotf {
//  inputs = {
//    reactome = {
//      format = "parquet"
//      path = ${data_target}"reactome/*.parquet"
//    }
//    evidences = ${search.inputs.evidences}
//    diseases = ${search.inputs.diseases}
//    targets {
//      path = ${common.output}"/preview/targets"
//      format = ${common.output-format}
//    }
//  }
//}
