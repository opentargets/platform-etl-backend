spark-settings.write-mode = "ignore"
common.output-format = "json"

data_version = "22.02.4"
common.input = "gs://open-targets-pre-data-releases/partners/"${data_version}"/input"
common.output = "gs://open-targets-pre-data-releases/partners/"${data_version}"/output/etl/"${common.output-format}

evidences.data-sources-exclude = []
etl-dag.resolve = true

chembl_version = "29"
chembl_date = "2022-01-18"
drug.chembl-molecule.path = ${common.input}"/chembl-inputs/chembl_"${chembl_version}"_molecule-"${chembl_date}".jsonl"
drug.chembl-indication.path = ${common.input}"/chembl-inputs/chembl_"${chembl_version}"_drug_indication-"${chembl_date}".jsonl"
drug.chembl-mechanism.path = ${common.input}"/chembl-inputs/chembl_"${chembl_version}"_mechanism-"${chembl_date}".jsonl"
drug.chembl-target.path = ${common.input}"/chembl-inputs/chembl_"${chembl_version}"_target-"${chembl_date}".jsonl"
drug.chembl-warning.path = ${common.input}"/chembl-inputs/chembl_"${chembl_version}"_drug_warning-"${chembl_date}".jsonl"
drug.drugbank-to-chembl.path = ${common.input}"/chembl-inputs/drugbank-2020-06-01.csv.gz"

expression.rna.path = ${common.input}"/expression-inputs/baseline_expression_counts-2020-05-07.tsv"
expression.binned.path = ${common.input}"/expression-inputs/baseline_expression_binned-2020-05-07.tsv"
expression.zscore.path = ${common.input}"/expression-inputs/baseline_expression_zscore_binned-2020-05-07.tsv"
expression.exprhierarchy.path = ${common.input}"/expression-inputs/expression_hierarchy_curation-2022-01-28.tsv"
expression.efomap.path = ${common.input}"/expression-inputs/tissue-translation-map-2022-01-28.json"
expression.tissues.path = ${common.input}"/expression-inputs/normal_tissue-2022-01-28.tsv.gz"

openfda.meddra.meddra-preferred-terms.path = "gs://open-targets-data-releases-private/meddra/meddra23.1/MedAscii/pt.asc"
openfda.meddra-low-level-terms.path = "gs://open-targets-data-releases-private/meddra/meddra23.1/MedAscii/llt.asc"

gene-ontology.go-input.path = ${common.input}"/gene-ontology-inputs/go.obo"

interactions.rnacentral.path = ${common.input}"/interactions-inputs/rna_central_ensembl.tsv"
interactions.humanmapping.path = ${common.input}"/interactions-inputs/HUMAN_9606_idmapping.dat.gz"
interactions.ensproteins.path = ${common.input}"/interactions-inputs/Homo_sapiens.GRCh38.chr.gtf.gz"
interactions.intact.path = ${common.input}"/interactions-inputs/intact-interactors-2022-01-28.json"
interactions.strings.path = ${common.input}"/interactions-inputs/9606.protein.links.full_w_homology.v11.5.txt.gz"

disease.efo-ontology.path = ${common.input}"/ontology-inputs/ontology-efo-v3.38.0.jsonl"
disease.hpo-ontology.path = ${common.input}"/ontology-inputs/ontology-hpo.jsonl"
disease.mondo-ontology.path = ${common.input}"/ontology-inputs/ontology-mondo.jsonl"
disease.hpo-phenotype.path = ${common.input}"/ontology-inputs/hpo-phenotypes-2022-01-28.jsonl"

reactome.inputs.pathways.path = ${common.input}"/reactome-inputs/ReactomePathways-2022-01-28.txt"
reactome.inputs.relations.path = ${common.input}"/reactome-inputs/ReactomePathwaysRelation-2022-01-28.txt"

target.input.chemical-probes.path = ${common.input}"/target-inputs/chemicalprobes/chemicalprobes-2022-01-25.json"
target.input.ensembl.path = ${common.input}"/target-inputs/ensembl/homo_sapiens.jsonl"
target.input.genetic-constraints.path = ${common.input}"/target-inputs/gnomad/gnomad_lof_by_gene.txt.gz"
target.input.gene-ontology.path = ${common.input}"/target-inputs/go/goa_human.gaf.gz"
target.input.gene-ontology-rna.path = ${common.input}"/target-inputs/go/goa_human_rna.gaf.gz"
target.input.gene-ontology-rna-lookup.path = ${common.input}"/target-inputs/go/ensembl.tsv"
target.input.gene-ontology-eco.path = ${common.input}"/target-inputs/go/goa_human_eco.gpa.gz"
target.input.hallmarks.path = ${common.input}"/target-inputs/hallmarks/cosmic-hallmarks-2022-01-19.tsv.gz"
target.input.hgnc.path = ${common.input}"/target-inputs/genenames/hgnc_complete_set-2022-01-28.json"
target.input.homology-dictionary.path = ${common.input}"/target-inputs/homologue/species_EnsemblVertebrates.txt"
target.input.homology-coding-proteins.path = ${common.input}"/target-inputs/homologue/c*.tsv.gz"
target.input.homology-gene-dictionary.path = ${common.input}"/target-inputs/homologue/105/105-*.tsv"
target.input.hpa.path = ${common.input}"/target-inputs/hpa/subcellular_location.tsv.gz"
target.input.hpa-sl-ontology.path = ${common.input}"/target-inputs/hpa/subcellular_locations_ssl-2021-08-19.tsv"
target.input.ncbi.path = ${common.input}"/target-inputs/ncbi/Homo_sapiens.gene_info.gz"
target.input.ps-gene-identifier.path = ${common.input}"/target-inputs/project-scores/gene_identifiers_latest.csv.gz"
target.input.ps-essentiality-matrix.path = ${common.input}"/target-inputs/project-scores/04_binaryDepScores.tsv"
target.input.reactome-pathways.path = ${common.input}"/target-inputs/reactome/Ensembl2Reactome.txt"
target.input.safety-toxicity.path = ${common.input}"/target-inputs/safety/toxcast/ToxCast-2021-08-17.tsv"
target.input.safety-adverse-event.path = ${common.input}"/target-inputs/safety/adverse_events/adverse_event_safety.json"
target.input.safety-safety-risk.path = ${common.input}"/target-inputs/safety/safety_risk/sr-2021-11-03.json"
target.input.tep.path = ${common.input}"/target-inputs/tep/tep-2022-01-24.json.gz"
target.input.tractability.path = ${common.input}"/target-inputs/tractability/tractability-2022-01-19.tsv"
target.input.uniprot.path = ${common.input}"/target-inputs/uniprot/uniprot-2022-01-28.txt.gz"
target.input.uniprot-ssl.path = ${common.input}"/target-inputs/uniprot/uniprot-ssl-2022-01-28.tsv.gz"

target-validation.inputs = [
  {
    name = "mousePhenotypes"
    id-column = "targetFromSourceId"
    data = {
      format = "json"
      path = ${common.input}"/mouse-phenotypes-inputs/mouse_phenotypes-2022-01-25.json.gz"
    }
  }
]

etl-dag.steps = [
            {step: "disease", dependencies: []},
            {step: "reactome", dependencies: []},
            {step: "expression", dependencies: []},
            {step: "go", dependencies: []},
            {step: "target", dependencies: ["reactome"]},
            {step: "interaction", dependencies: ["target"]},
            {step: "targetValidation", dependencies: ["target"]},
            {step: "evidence", dependencies: ["disease", "target"]},
            {step: "association", dependencies: ["evidence", "disease"]},
            {step: "associationOTF", dependencies: ["evidence", "target", "disease", "reactome"]},
            {step: "search", dependencies: ["target", "drug", "evidence", "association", "disease"]},
            {step: "drug", dependencies: ["target", "evidence"]},
            {step: "knownDrug", dependencies: ["target", "disease", "drug", "evidence"]},
            {step: "ebisearch", dependencies: ["target", "disease", "evidence", "association"]},
            {step: "fda", dependencies: ["drug"]},
            {step: "otar", dependencies: ["disease", "target"]}
]

evidences.data-sources = [
              {
                id: "chembl",
                unique-fields: [
                  "drugId",
                  "urls.url"
                ],
                score-expr: """
                  element_at(map(0, 0.09, 1, 0.1, 2, 0.2, 3, 0.7, 4, 1.0), clinicalPhase) *
                  case
                  when studyStopReasonCategories is null then
                    double(1.0)
                  else
                    array_min(
                      transform(
                        studyStopReasonCategories,
                          x -> element_at(
                            map(
                                'Another study', double(1.0),
                                'Business or administrative', double(1.0),
                                'COVID-19', double(1.0),
                                'Ethical reason', double(1.0),
                                'Insufficient data', double(1.0),
                                'Insufficient enrollment', double(1.0),
                                'Interim analysis', double(1.0),
                                'Invalid reason', double(1.0),
                                'Logistics or resources', double(1.0),
                                'Met endpoint', double(1.0),
                                'Negative', double(0.5),
                                'No context', double(1.0),
                                'Regulatory', double(1.0),
                                'Safety or side effects', double(0.5),
                                'Study design', double(1.0),
                                'Study staff moved', double(1.0),
                                'Success', double(1.0)
                            ),
                         x)
                       )
                     )
                  end
                """
              },
              {
                id: "europepmc",
                unique-fields: [
                  "literature"
                ],
                score-expr: "array_min(array(resourceScore / 100.0, 1.0))"
              },
              {
                id: "eva",
                datatype-id: "genetic_association",
                unique-fields: [
                  "studyId",
                  "variantId"
                ],
                score-expr: """
                coalesce(array_max(
                  transform(
                    clinicalSignificances,
                    x -> element_at(
                      map(
                        'association not found', 0.0,
                        'benign', 0.0,
                        'not provided', 0.0,
                        'likely benign', 0.0,
                        'conflicting interpretations of pathogenicity', 0.3,
                        'conflicting data from submitters', 0.3,
                        'other', 0.3,
                        'uncertain significance', 0.3,
                        'risk factor', 0.5,
                        'affects', 0.5,
                        'likely pathogenic', 0.7,
                        'confers sensitivity', 0.9,
                        'association', 0.9,
                        'drug response', 0.9,
                        'protective', 0.9,
                        'pathogenic', 0.9
                        ),
                      x)
                  )
                ), 0.0) + coalesce(element_at(
                  map(
                    'practice guideline', 0.1,
                    'reviewed by expert panel', 0.07,
                    'criteria provided, multiple submitters, no conflicts', 0.05,
                    'criteria provided, conflicting interpretations', 0.02,
                    'criteria provided, single submitter', 0.02,
                    'no assertion for the individual variant', 0.0,
                    'no assertion criteria provided', 0.0,
                    'no assertion provided', 0.0
                  ),
                  confidence
                ), 0.0)
                """
              },
              {
                id: "eva_somatic",
                unique-fields: [
                  "studyId",
                  "variantId"
                ],
                score-expr: """
                coalesce(array_max(
                  transform(
                    clinicalSignificances,
                    x -> element_at(
                      map(
                        'association not found', 0.0,
                        'benign', 0.0,
                        'not provided', 0.0,
                        'likely benign', 0.0,
                        'conflicting interpretations of pathogenicity', 0.3,
                        'other', 0.3,
                        'uncertain significance', 0.3,
                        'risk factor', 0.5,
                        'affects', 0.5,
                        'likely pathogenic', 0.7,
                        'association', 0.9,
                        'drug response', 0.9,
                        'protective', 0.9,
                        'pathogenic', 0.9
                        ),
                      x)
                  )
                ), 0.0) + coalesce(element_at(
                  map(
                    'practice guideline', 0.1,
                    'reviewed by expert panel', 0.07,
                    'criteria provided, multiple submitters, no conflicts', 0.05,
                    'criteria provided, conflicting interpretations', 0.02,
                    'criteria provided, single submitter', 0.02,
                    'no assertion for the individual variant', 0.0,
                    'no assertion criteria provided', 0.0,
                    'no assertion provided', 0.0
                  ),
                  confidence
                ), 0.0)
                """
              },
              {
                excluded-biotypes: [
                  "IG_C_pseudogene",
                  "IG_J_pseudogene",
                  "IG_pseudogene",
                  "IG_V_pseudogene",
                  "polymorphic_pseudogene",
                  "processed_pseudogene",
                  "pseudogene",
                  "rRNA",
                  "rRNA_pseudogene",
                  "snoRNA",
                  "snRNA",
                  "transcribed_processed_pseudogene",
                  "transcribed_unitary_pseudogene",
                  "transcribed_unprocessed_pseudogene",
                  "TR_J_pseudogene",
                  "TR_V_pseudogene",
                  "unitary_pseudogene",
                  "unprocessed_pseudogene"
                ],
                id: "expression_atlas",
                unique-fields: [
                  "contrast",
                  "studyId"
                ],
                score-expr: "array_min(array(1.0, pvalue_linear_score_default(resourceScore) * (abs(log2FoldChangeValue) / 10) * (log2FoldChangePercentileRank / 100)))"
              },
              {
                id: "gene2phenotype",
                datatype-id: "genetic_association",
                unique-fields: [
                  "diseaseFromSource",
                  "allelicRequirements",
                  "studyId"
                ],
                score-expr: """
                element_at(
                  map(
                    'definitive', 1.0,
                    'both RD and IF', 1.0,
                    'strong', 1.0,
                    'moderate', 0.5,
                    'limited', 0.01
                  ),
                  confidence
                )
                """
              },
              {
                id: "genomics_england",
                datatype-id: "genetic_association",
                unique-fields: [
                  "diseaseFromSource",
                  "studyId"
                ],
                score-expr: """
                element_at(
                  map(
                    'amber', 0.5,
                    'green', 1.0
                  ),
                  confidence
                )
                """
              },
              {
                id: "intogen",
                unique-fields: [
                  "cohortShortName"
                ],
                score-expr: "pvalue_linear_score(resourceScore, 0.1, 1e-10, 0.25, 1.0)"
              },
              {
                id: "ot_genetics_portal",
                datatype-id: "genetic_association"
                unique-fields: [
                  "studyId",
                  "variantId"
                ],
                score-expr: "resourceScore"
              },
              {
                id: "ot_crispr",
                datatype-id: "ot_partner",
                unique-fields: [
                  "studyId",
                  "diseaseFromSourceMappedId",
                  "targetFromSourceId",
                  "resourceScore",
                  "statisticalTestTail"
                ],
                score-expr: "1.0"
              },
              {
                id: "encore",
                datatype-id: "ot_partner",
                unique-fields: [
                  "targetFromSourceId",
                  "interactingTargetFromSourceId",
                  "diseaseFromSourceMappedId",
                  "diseaseCellLines"
                ],
                score-expr: "pvalue_linear_score(geneticInteractionPValue, 1.0, 0.01, 0.0, 1.0)"
              },
              {
              id: "ot_crispr_validation",
              datatype-id: "ot_validation_lab",
              unique-fields: [
                "targetFromSourceId", "diseaseFromSourceMappedId", "resourceScore"
              ],
              score-expr: "element_at(map('significant', 1.0, 'not significant', 0.0), confidence)"
            },
              {
                id: "orphanet",
                datatype-id: "genetic_association",
                unique-fields: [
                  "diseaseFromSourceId"
                ],
                score-expr: "element_at(map('Assessed', 1.0,'Not yet assessed', 0.5), confidence)"
              },
              {
                id: "phenodigm",
                unique-fields: [
                  "diseaseFromSource",
                  "biologicalModelAllelicComposition",
                  "targetInModel",
                  "biologicalModelGeneticBackground"
                ],
                score-expr: "resourceScore / 100"
              },
              {
                id: "phewas_catalog",
                datatype-id: "genetic_association",
                unique-fields: [
                  "diseaseFromSource",
                  "variantRsId"
                ],
                score-expr: "linear_rescale(studyCases, 0.0, 8800.0, 0.0, 1.0) * pvalue_linear_score(resourceScore, 0.5, 1e-25, 0.0, 1.0)"
              },
              {
                id: "crispr",
                score-expr: "linear_rescale(resourceScore, 41.5, 100, 0.415, 1.0)",
                unique-fields: []
              },
              {
                id: "progeny",
                unique-fields: [
                  "pathways",
                  "diseaseFromSource"
                ],
                score-expr: "pvalue_linear_score(resourceScore, 1e-4, 1e-14, 0.5, 1.0)"
              },
              {
                id: "reactome",
                unique-fields: [
                  "variantAminoacidDescriptions",
                  "targetModulation",
                  "reactionId"
                ],
                score-expr: "1.0"
              },
              {
                id: "slapenrich",
                unique-fields: [
                  "pathways",
                  "diseaseFromSource"
                ],
                score-expr: "pvalue_linear_score(resourceScore, 1e-4, 1e-14, 0.5, 1.0)"
              },
              {
                id: "sysbio",
                unique-fields: [
                  "studyOverview",
                  "literature",
                  "pathways"
                ],
                score-expr: "resourceScore"
              },
              {
                id: "uniprot_literature"
                datatype-id: "genetic_association"
                unique-fields: [
                  "diseaseFromSource",
                ],
                score-expr: """
                element_at(
                  map(
                    'high', 1.0,
                    'medium', 0.5
                  ),
                  confidence
                )
                """

              },
              {
                id: "uniprot_variants"
                datatype-id: "genetic_association"
                unique-fields: [
                  "diseaseFromSource",
                  "variantRsId"
                ],
                score-expr: """
                element_at(
                  map(
                    'high', 1.0,
                    'medium', 0.5
                  ),
                  confidence
                )
                """

              },
              {
                id: "clingen"
                datatype-id: "genetic_association"
                unique-fields: [
                  "diseaseFromSource",
                  "studyId",
                  "allelicRequirements",
                ],
                score-expr: """
                element_at(
                  map(
                    'No Known Disease Relationship', 0.01,
                    'Refuted', 0.01,
                    'Disputed', 0.01,
                    'Limited', 0.01,
                    'Moderate', 0.5,
                    'Strong', 1.0,
                    'Definitive', 1.0
                  ),
                  confidence
                )
                """
              },
              {
                id: "cancer_biomarkers"
                unique-fields: [
                  "biomarkerName",
                  "confidence",
                  "diseaseFromSource",
                  "drugFromSource",
                  "drugResponse"
                ],
                score-expr: "1.0"
              }
]

otarproject.otar.path = ${common.input}"/otar-inputs/otar_projects.tsv"

associations.data-sources = [
                 {id: "europepmc", weight: 0.2, data-type = "literature", propagate = true},
                 {id: "expression_atlas", weight: 0.2, data-type = "rna_expression", propagate = false},
                 {id: "phenodigm", weight: 0.2, data-type = "animal_model", propagate = true},
                 {id: "progeny", weight: 0.5, data-type = "affected_pathway", propagate = true},
                 {id: "slapenrich", weight: 0.5, data-type = "affected_pathway", propagate = true},
                 {id: "sysbio", weight: 0.5, data-type = "affected_pathway", propagate = true},
                 {id: "cancer_biomarkers", weight: 0.5, data-type = "affected_pathway", propagate = true},
                 {id: "ot_crispr", weight: 0.5, data-type = "ot_partner", propagate = true},
                 {id: "encore", weight: 0.5, data-type = "ot_partner", propagate = true},
                 {id: "ot_crispr_validation", weight: 0.5, data-type = "ot_partner", propagate = true},
               ]