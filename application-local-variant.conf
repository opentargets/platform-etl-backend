spark-uri = "local[4]"
data = "/home/jarrod/development/platform-etl-backend/data/genetics"
output_local = ${data}"/output"

etl-dag.resolve = false

spark-settings {
  write-mode = "overwrite"
}
common {
  output-format = "parquet"
  output = ${output_local}
}
genetics.output = ${common.output}

variant {
  inputs {
    variant-annotation {
      format = "parquet"
      path = "/home/jarrod/development/platform-etl-backend/data/genetics/variant/part-00000*.parquet"
    }
    target-index {
      format = "parquet"
      path = "/home/jarrod/development/platform-etl-backend/data/genetics/variant/target/*.parquet"
    }
  }
}

variant-gene {
  # absolute distance between gene transcription start site and variant location. The smaller the number, the less genes
  # will be linked to the variant.
  tss-distance = 500000
  inputs {
    variant-index = {
      path = "/home/jarrod/development/platform-etl-backend/data/output/variant-index"
    }
    target-index = ${variant.inputs.target-index}
    vep-consequences {
      path = ${data}"/vg/vep_consequences.tsv"
      format = "csv"
      options = [
        {k: "sep", v: "\\t"},
        {k: "header", v: "true"}
        {k: "inferSchema", v: "true"}
        {k: "ignoreLeadingWhiteSpace", v: "true"}
        {k: "ignoreTrailingWhiteSpace", v: "true"}
        {k: "mode", v: "DROPMALFORMED"}
      ]
    }
    qtl {
      path = ${data}"/vg/qtl"
      format = "parquet"
    }
    interval {
      # fixme: we need to sort out PIS/input structure! We don't want to be pulling out the file name from the path as an
      # input to the pipeline.
      path = ${data}"/vg/interval/*/*/190920/*.parquet"
      format = "parquet"
    }
  }
  outputs {
    variant-gene {
      path = ${genetics.output}"/variant-gene1/"
      format = ${common.output-format}
    }
    # todo: I think we can either output the distance values here calculated as a step in v2g, or have distance as a prior
    # step which feeds into v2g.
  }
}

variant-disease {
  inputs {
    toploci.path = ${data}"/vd/toploci.parquet"
    ld.path = ${data}"/vd/ld.parquet"
    studies.path = ${data}"/vd/studies.parquet"
    finemapping.path = ${data}"/vd/finemapping.parquet"
    efos.path = ${data}"/vd/trait_efo.parquet"
    variants.path = "/home/jarrod/development/platform-etl-backend/data/output/variant-index"
  }
}

variant-disease-coloc.inputs.targets.path = ${data}"/variant/target/part*.parquet"
variant-disease-coloc.inputs.variants.path = "/home/jarrod/development/platform-etl-backend/data/output/variant-index"
variant-disease-coloc.inputs.colocs.path = ${data}"/coloc/*.parquet"

disease-variant-gene.inputs.variant-disease.path = ${genetics.output}"/variant-disease"
disease-variant-gene.inputs.variant-gene.path = ${genetics.output}"/variant-gene"

scored-datasets.inputs.disease-variant-gene.path = ${genetics.output}"/d2v2g"
scored-datasets.inputs.variant-gene.path = ${genetics.output}"/variant-gene"

manhattan.inputs.variant-disease.path = ${genetics.output}"/variant-disease"
manhattan.inputs.disease-variant-gene-scored.path = ${genetics.output}"/d2v2g_scored"
manhattan.inputs.disease-coloc.path = ${genetics.output}"/v2d_coloc"
manhattan.inputs.locus-gene.path = "/home/jarrod/development/platform-etl-backend/data/genetics/l2g/*.parquet"
