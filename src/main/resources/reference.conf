spark-uri = null
common {
  default-steps = [
    "disease",
    "target",
    "reactome",
    "eco",
    "drug"
    "interactions",
    "drugBeta",
    "networks",
    "cancerBiomarkers",
    "search",
    "evidenceDrugDirect",
    "ddr",
    "expression",
    "mousePhenotypes",
    "evidence",
    "association",
    "associationOTF"
    // "dailymed",
    // "clinicalTrials",
  ]
  output-format = "json"
  output = "gs://ot-snapshots/etl/latest"
  output = ${?OT_ETL_OUTPUT}
  inputs {
    ddr  {
      format ="parquet"
      path = "gs://ot-snapshots/parquet/20.06/parquet/relation_parquet"
    }
    disease  {
      format ="parquet"
      path = "gs://ot-snapshots/parquet/20.06/parquet/efo_parquet"
    }
    drug  {
     format ="parquet"
     path = "gs://ot-snapshots/parquet/20.06/parquet/drug_parquet"
    }
     evidence  {
      format ="parquet"
      path = "gs://ot-snapshots/parquet/20.06/parquet/evidence_parquet"
    }
    eco  {
      format ="parquet"
      path = "gs://ot-snapshots/parquet/20.06/parquet/eco_parquet"
    }
    expression  {
      format ="parquet"
      path = "gs://ot-snapshots/parquet/20.06/parquet/expression_parquet/"
    }
    mousephenotypes {
      format ="json"
      path = "gs://ot-snapshots/jsonl/20.06/parquet/20.06/parquet_mousephenotypes.json"
    }
    reactome {
      format ="parquet"
      path = "gs://ot-snapshots/parquet/20.06/parquet/rea_parquet"
    }
    target {
      format ="parquet"
      path = "gs://ot-snapshots/parquet/20.06/parquet/gene_parquet"
    }
    tep {
      format ="json"
      path = "gs://ot-snapshots/jsonl/20.06/tep-2020-06-01.json"
    }
    drug-beta {
      chembl-molecule {
        format = "json"
        path = "gs://ot-snapshots/jsonl/chembl/chembl_27_molecule-2020-10-08.jsonl"
      }
      chembl-indication {
        format = "json"
        path = "gs://ot-snapshots/jsonl/chembl/chembl_27_drug_indication-2020-10-08.jsonl"
      }
      chembl-mechanism {
        format = "json"
        path = "gs://ot-snapshots/jsonl/chembl/chembl_27_mechanism-2020-10-08.jsonl"
      }
      chembl-target {
        format = "json"
        path = "gs://ot-snapshots/jsonl/chembl/chembl_27_target-2020-10-08.jsonl"
      }
      disease-pipeline: ${?common.inputs.disease}
      target-pipeline: ${?common.inputs.target}
      evidence-pipeline: ${?common.inputs.evidence}
      drugbank-to-chembl {
        format = "tsv"
        path = "gs://ot-team/jarrod/drugbank/db.csv.gz"
      }
      drug-extensions = [
        {
          extension-type = "synonym"
          path = "gs://ot-team/jarrod/drugbank/db.json"
        }
      ]
    }
    interactions {
       rnacentral {
          format = "json"
          path = "gs://ot-snapshots/parquet/20.09/json/"
       }
       humanmapping {
          format = "json"
          path = "gs://ot-snapshots/parquet/20.09/json/"
       }
       ensproteins {
          format = "json"
          path = "gs://ot-snapshots/parquet/20.09/json/"
       }
       intact {
          format = "json"
          path = "gs://ot-snapshots/parquet/20.09/json/interactor_pair_interactions.json"
       }
       strings = {
          format = "json"
          path = "gs://ot-snapshots/parquet/20.09/json/strings.json"
       }
    }
  }
}
// donwloaded from here https://aact.ctti-clinicaltrials.org/pipe_files
clinical-trials {
  studies = "clinicaltrials/studies.txt"
  study-references = "clinicaltrials/study_references.txt"
  countries = "clinicaltrials/countries.txt"
  sponsors = "clinicaltrials/sponsors.txt"
  interventions = "clinicaltrials/interventions.txt"
  interventions-other-names = "clinicaltrials/intervention_other_names.txt"
  interventions-mesh = "clinicaltrials/browse_interventions.txt"
  conditions = "clinicaltrials/conditions.txt"
  conditions-mesh = "clinicaltrials/browse_conditions.txt"
}

// downloaded from here https://dailymed.nlm.nih.gov/dailymed/spl-resources-all-mapping-files.cfm
// and here https://dailymed.nlm.nih.gov/dailymed/spl-resources-all-drug-labels.cfm
dailymed {
  rxnorm-mapping = "dailymed/mappings/rxnorm_mappings.txt"
  //    prescriptionData = "dailymed/data/part2/prescription/7c727af7-b69e-4079-92a8-91a4f059e0bf.xml"
  //    prescriptionData = "dailymed/data/part1/prescription/51c9bd8b-d604-54a0-e054-00144ff8d46c.xml"
  prescription-data = "dailymed/data/**/prescription/*.xml"
}

// this is a temporal fix that have to be removed eventually
evidence-protein-fix {
  // input = "evidences/*.json.gz"
  input = "evidences/chembl-2019-08-16.json.gz"
  output = ${common.output}"/evidences_protein_fix"
}

evidences {
  input {
    format = "json"
    path = "/home/mkarmona/src/opentargets/data/platform/20.11/evidences-raw/"
  }

  unique-fields = [
    "targetId",
    "targetFromSourceId",
    "diseaseId",
    "datasourceId"
  ]

  score-expr = "resourceScore"

  data-sources = [
    {
      id: "chembl",
      unique-fields: [
        "drugId",
        "clinicalUrls.url"
      ],
      score-expr: "element_at(map(0, 0.09, 1, 0.1, 2, 0.2, 3, 0.7, 4, 1.0), clinicalPhase)"
    },
    {
      id: "europepmc",
      unique-fields: [
        "literature"
      ],
      score-expr: "array_min(array(resourceScore / 100.0, 1.0))"
    },
    {
      id: "eva",
      unique-fields: [
        "recordId",
        "variantRsId"
      ],
      score-expr: """
      array_max(
        transform(
          clinicalSignificances,
          x -> element_at(
            map(
              'association not found', 0.0,
              'benign', 0.0,
              'not provided', 0.0,
              'likely benign', 0.0,
              'conflicting interpretations of pathogenicity', 0.3,
              'other', 0.3,
              'uncertain significance', 0.3,
              'risk factor', 0.5,
              'affects', 0.5,
              'likely pathogenic', 1.0,
              'association', 1.0,
              'drug response', 1.0,
              'protective', 1.0,
              'pathogenic', 1.0
              ),
            x)
        )
      )
      """
    },
    {
      id: "eva_somatic",
      unique-fields: [
        "recordId",
        "variantRsId"
      ],
      score-expr: """
      array_max(
        transform(
          clinicalSignificances,
          x -> element_at(
            map(
              'association not found', 0.0,
              'benign', 0.0,
              'not provided', 0.0,
              'likely benign', 0.0,
              'conflicting interpretations of pathogenicity', 0.3,
              'other', 0.3,
              'uncertain significance', 0.3,
              'risk factor', 0.5,
              'affects', 0.5,
              'likely pathogenic', 1.0,
              'association', 1.0,
              'drug response', 1.0,
              'protective', 1.0,
              'pathogenic', 1.0
              ),
            x)
        )
      )
      """
    },
    {
      id: "expression_atlas",
      unique-fields: [
        "contrast",
        "studyId"
      ],
      score-expr: "array_min(array(1.0, pvalue_linear_score_default(resourceScore) * (abs(log2FoldChangeValue) / 10) * (log2FoldChangePercentileRank / 100)))"
    },
    {
      id: "gene2phenotype",
      unique-fields: [
        "diseaseFromSource",
        "allelicRequirements"
      ],
      score-expr: """
      element_at(
        map(
          'possible', 0.25,
          'probable', 0.5,
          'confirmed', 1.0,
          'both RD and IF', 1.0,
          'child IF', 1.0
        ),
        confidence
      )
      """
    },
    {
      id: "genomics_england",
      unique-fields: [
        "diseaseFromSource",
        "studyId"
      ],
      score-expr: """
      element_at(
        map(
          'amber', 0.5,
          'green', 1.0
        ),
        confidence
      )
      """
    },
    {
      id: "intogen",
      unique-fields: [
        "cohortShortName"
      ],
      score-expr: "pvalue_linear_score(resourceScore, 0.1, 1e-10, 0.25, 1.0)"
    },
    {
      id: "ot_genetics_portal",
      unique-fields: [
        "studyId",
        "variantId"
      ],
      score-expr: "resourceScore"
    },
    {
      id: "phenodigm",
      unique-fields: [
        "diseaseFromSource",
        "biologicalModelAllelicComposition",
        "targetInModel",
        "biologicalModelGeneticBackground"
      ],
      score-expr: "resourceScore"
    },
    {
      id: "phewas_catalog",
      unique-fields: [
        "diseaseFromSource",
        "variantRsId"
      ],
      score-expr: "linear_rescale(studyCases, 0.0, 8800.0, 0.0, 1.0) * pvalue_linear_score(resourceScore, 0.5, 1e-25, 0.0, 1.0)"
    },
    {
      id: "progeny",
      unique-fields: [
        "pathwayId",
        "diseaseFromSource"
      ],
      score-expr: "pvalue_linear_score(resourceScore, 1e-4, 1e-14, 0.5, 1.0)"
    },
    {
      id: "reactome",
      unique-fields: [
        "variantAminoacidDescriptions",
        "targetModulation",
        "reactionId"
      ],
      score-expr: "1.0"
    },
    {
      id: "slapenrich",
      unique-fields: [
        "pathwayId",
        "diseaseFromSource"
      ],
      score-expr: "pvalue_linear_score(resourceScore, 1e-4, 1e-14, 0.5, 1.0)"
    },
    {
      id: "sysbio",
      unique-fields: [
        "studyOverview",
        "literature"
      ],
      score-expr: "resourceScore"
    },
    {
      id: "uniprot_literature"
      unique-fields: [
        "diseaseFromSource",
      ],
      score-expr: "resourceScore"
    },
    {
      id: "clingen"
      unique-fields: [
        "recordId"
      ],
      score-expr: """
      element_at(
        map(
          'No Reported Evidence', 0.01,
          'Refuted', 0.01,
          'Disputed', 0.01,
          'Limited', 0.01,
          'Moderate', 0.5,
          'Strong', 1.0,
          'Definitive', 1.0
        ),
        confidence
      )
      """
    }
  ]
}

associations {
  default-weight = 1.0
  default-propagate = true
  data-sources = [
    {id: "cancer_gene_census", weight = 1, data-type = "somatic_mutation", propagate = true},
    {id: "chembl", weight = 1, data-type = "known_drug", propagate = true},
    {id: "crispr", weight: 1, data-type = "affected_pathway", propagate = true},
    {id: "europepmc", weight: 0.2, data-type = "literature", propagate = true},
    {id: "eva", weight: 1, data-type = "genetic_association", propagate = true},
    {id: "eva_somatic", weight: 1, data-type = "somatic_mutation", propagate = true},
    {id: "expression_atlas", weight: 0.2, data-type = "rna_expression", propagate = false},
    {id: "gene2phenotype", weight: 1, data-type = "genetic_association", propagate = true},
    {id: "genomics_england", weight: 1, data-type = "genetic_association", propagate = true},
    {id: "ot_genetics_portal", weight: 1, data-type = "genetic_association", propagate = true},
    {id: "intogen", weight: 1, data-type = "somatic_mutation", propagate = true},
    {id: "phenodigm", weight: 0.2, data-type = "animal_model", propagate = true},
    {id: "phewas_catalog", weight: 1, data-type = "genetic_association", propagate = true},
    {id: "progeny", weight: 0.5, data-type = "affected_pathway", propagate = true},
    {id: "reactome", weight: 1, data-type = "affected_pathway", propagate = true},
    {id: "slapenrich", weight: 0.5, data-type = "affected_pathway", propagate = true},
    {id: "sysbio", weight: 0.5, data-type = "affected_pathway", propagate = true},
    {id: "uniprot", weight: 1, data-type = "genetic_association", propagate = true},
    {id: "uniprot_literature", weight: 1, data-type = "genetic_association", propagate = true},
    {id: "uniprot_somatic", weight: 1, data-type = "somatic_mutation", propagate = true}
  ]
}
